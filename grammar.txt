PROGRAM -> PROGRAM'
PROGRAM' -> CLASSLIST | &
CLASSLIST -> CLASSDECL CLASSLIST'
CLASSLIST' -> CLASSDECL CLASSLIST' | &
CLASSDECL -> class ident CLASSDECL' CLASSBODY
CLASSDECL' -> extends ident | &
CLASSBODY -> { CLASSBODY' TYPE CLASSBODY''' }
TYPE -> ENUMTYPE TYPE2 | &
TYPE2 -> ident TYPE3 | [ ] METHODDECL'' ident METHODBODY CLASSBODY''''
TYPE3 -> METHODBODY CLASSBODY'''' | VARDECL'' VARDECL''' ; CLASSBODY''
ENUMTYPE -> int | string | ident
CLASSBODY'''' -> METHODDECL CLASSBODY'''' | &
CLASSBODY''' -> CONSTRUCTDECL CLASSBODY''' | &
CLASSBODY'' -> VARDECL ; CLASSBODY'' | &
CLASSBODY' -> CLASSLIST | &
VARDECL -> VARDECL' ident VARDECL'' VARDECL'''
VARDECL''' -> , ident VARDECL'''' VARDECL''' | &
VARDECL'''' -> [ ] VARDECL'''' | &
VARDECL'' -> [ ] VARDECL'' | &
VARDECL' -> int | string | ident
CONSTRUCTDECL -> constructor METHODBODY
METHODDECL -> METHODDECL' METHODDECL'' ident METHODBODY
METHODDECL'' -> [ ] METHODDECL'' | &
METHODDECL' -> int | string | ident
METHODBODY -> ( PARAMLIST ) STATEMENT
PARAMLIST -> PARAMLIST' | &
PARAMLIST' -> PARAMLIST'' ident PARAMLIST''' PARAMLIST''''
PARAMLIST'''' -> , PARAMLIST''''' ident PARAMLIST''''''
PARAMLIST'''''' -> [ ] PARAMLIST'''''' | &
PARAMLIST''''' -> int | string | ident
PARAMLIST''' -> [ ] PARAMLIST''' | &
PARAMLIST'' -> int | string | ident
STATEMENT -> STATEMENT'
STATEMENT' -> ident STATEMENT' | (int | string) ident VARDECL'' VARDECL''' ; | PRINTSTAT ; | READSTAT ; | RETURNSTAT ; | IFSTAT | FORSTAT | { STATLIST } | break ; | ;
STATEMENT'' -> ident VARDECL'' VARDECL''' | LVALUE' = ATRIBSTAT' ;
ATRIBSTAT -> LVALUE = ATRIBSTAT'
ATRIBSTAT' -> EXPRESSION | ALOCEXPRESSION
PRINTSTAT -> print EXPRESSION
READSTAT -> read LVALUE
RETURNSTAT -> return RETURNSTAT'
RETURNSTAT' -> EXPRESSION | &
SUPERSTAT -> super SUPERSTAT'
SUPERSTAT' -> ARGLIST
IFSTAT -> if  STATEMENT IFSTAT''
IFSTAT'' -> else STATEMENT | &
FORSTAT -> for ( FORSTAT' ; FORSTAT'' ; FORSTAT''' ) STATEMENT
FORSTAT''' -> ATRIBSTAT | &
FORSTAT'' -> EXPRESSION | &
FORSTAT' -> ATRIBSTAT | &
STATLIST -> STATEMENT STATLIST'
STATLIST' -> STATLIST | &
LVALUE -> ident LVALUE'
LVALUE' -> [ EXPRESSION ] | . IDENT LVALUE''
LVALUE'' -> ( ARGLIST ) | &
ALOCEXPRESSION -> new ALOCEXPRESSION'
ALOCEXPRESSION' -> ident ( ARGLIST ) | ALOCEXPRESSION'' [ EXPRESSION ] ALOCEXPRESSION'''
ALOCEXPRESSION''' -> [ EXPRESSION ] ALOCEXPRESSION''' | &
ALOCEXPRESSION'' -> int | string | iednt
EXPRESSION -> NUMEXPRESSION EXPRESSION'
EXPRESSION' -> EXPRESSION'' NUMEXPRESSION
EXPRESSION'' -> < | > | <= | >= | == | !=
NUMEXPRESSION -> TERM NUMEXPRESSION'
NUMEXPRESSION' -> NUMEXPRESSION'' TERM
NUMEXPRESSION'' -> + | -
TERM -> UNARYEXPR TERM'
TERM' -> TERM'' UNARYEXPR
TERM'' -> * | / | %
UNARYEXPR -> UNARYEXPR' FACTOR
UNARYEXPR' -> UNARYEXPR''
UNARYEXPR'' -> ma | -
FACTOR -> FACTOR'
FACTOR' -> int_const | string_const | null | LVALUE ( EXPRESSION )
ARGLIST -> ARGLIST'
ARGLIST' -> EXPRESSION ARGLIST'' | &
ARGLIST'' -> , EXPRESSION ARGLIST'' | &